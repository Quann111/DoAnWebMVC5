@model WebApplication1.Areas.Admin.Models.User

@{
    Layout = null;
}

<link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
<script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
<!------ Include the above in your HEAD tag ---------->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <!-- Website CSS style -->
    <link href="css/bootstrap.min.css" rel="stylesheet">
    <!-- Website Font style -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.6.1/css/font-awesome.min.css">
    <link rel="stylesheet" href="style.css">
    <!-- Google Fonts -->
    <link href='https://fonts.googleapis.com/css?family=Passion+One' rel='stylesheet' type='text/css'>
    <link href='https://fonts.googleapis.com/css?family=Oxygen' rel='stylesheet' type='text/css'>
    <title>Admin</title>
    <style>
                /*
        /* Created by Filipe Pina
         * Specific styles of signin, register, component
         */
                /*
         * General styles
         */
                #playground-container {
                    height: 500px;
                    overflow: hidden !important;
                    -webkit-overflow-scrolling: touch;
                }

                body, html {
                    height: 100%;
                    background-repeat: no-repeat;
                    background: url(https://i.ytimg.com/vi/4kfXjatgeEU/maxresdefault.jpg);
                    font-family: 'Oxygen', sans-serif;
                    background-size: cover;
                }

                .main {
                    margin: 50px 15px;
                }

                h1.title {
                    font-size: 50px;
                    font-family: 'Passion One', cursive;
                    font-weight: 400;
                }

                hr {
                    width: 10%;
                    color: #fff;
                }

                .form-group {
                    margin-bottom: 15px;
                }

                label {
                    margin-bottom: 15px;
                }

                input,
                input::-webkit-input-placeholder {
                    font-size: 11px;
                    padding-top: 3px;
                }

                .main-login {
                    background-color: #fff;
                    /* shadows and rounded borders */
                    -moz-border-radius: 2px;
                    -webkit-border-radius: 2px;
                    border-radius: 2px;
                    -moz-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
                    -webkit-box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
                    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);
                }

                .form-control {
                    height: auto !important;
                    padding: 8px 12px !important;
                }

                .input-group {
                    -webkit-box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.21) !important;
                    -moz-box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.21) !important;
                    box-shadow: 0px 2px 5px 0px rgba(0,0,0,0.21) !important;
                }

                #button {
                    border: 1px solid #ccc;
                    margin-top: 28px;
                    padding: 6px 12px;
                    color: #666;
                    text-shadow: 0 1px #fff;
                    cursor: pointer;
                    -moz-border-radius: 3px 3px;
                    -webkit-border-radius: 3px 3px;
                    border-radius: 3px 3px;
                    -moz-box-shadow: 0 1px #fff inset, 0 1px #ddd;
                    -webkit-box-shadow: 0 1px #fff inset, 0 1px #ddd;
                    box-shadow: 0 1px #fff inset, 0 1px #ddd;
                    background: #f5f5f5;
                    background: -moz-linear-gradient(top, #f5f5f5 0%, #eeeeee 100%);
                    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #f5f5f5), color-stop(100%, #eeeeee));
                    background: -webkit-linear-gradient(top, #f5f5f5 0%, #eeeeee 100%);
                    background: -o-linear-gradient(top, #f5f5f5 0%, #eeeeee 100%);
                    background: -ms-linear-gradient(top, #f5f5f5 0%, #eeeeee 100%);
                    background: linear-gradient(top, #f5f5f5 0%, #eeeeee 100%);
                    filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#f5f5f5', endColorstr='#eeeeee', GradientType=0);
                }

                .main-center {
                    margin-top: 30px;
                    margin: 0 auto;
                    max-width: 400px;
                    padding: 10px 40px;
                    background: #009edf;
                    color: #FFF;
                    text-shadow: none;
                    -webkit-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.31);
                    -moz-box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.31);
                    box-shadow: 0px 3px 5px 0px rgba(0,0,0,0.31);
                }

                span.input-group-addon i {
                    color: #009edf;
                    font-size: 17px;
                }

                .login-button {
                    margin-top: 5px;
                }

                .login-register {
                    font-size: 11px;
                    text-align: center;
                }
    </style>
</head>
<body>
    <div class="container">
        <div class="row main">
            <div class="main-login main-center">
                <h5>Sign up once and watch any of our free demos.</h5>
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.LabelFor(model => model.UserID, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="cols-sm-10">
                                @Html.EditorFor(model => model.UserID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="cols-sm-10">
                                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="cols-sm-10">
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.FullName, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="cols-sm-10">
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="cols-sm-10">
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" style="display:flex ; text-align:center; justify-content:space-between ; margin:auto ">
                            <div class="col-md-offset-2 cols-sm-10">
                                <input type="submit" value="Create" class="btn btn-default" />
                            </div>
                            <button type="button" class="btn btn-dark" style="color:black">
                                @Html.ActionLink("Back to List", "Index")

                            </button>

                        </div>
                        
                    </div>
                }


            </div>
        </div>
    </div>
    </div>

</body>
</html>